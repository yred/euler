// Problem 2 - Even Fibonacci numbers
//
// Each new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 1 and 2, the first 10 terms will be:
//
//     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed
// four million, find the sum of the even-valued terms.

fn main() {
    println!("{}", solution());
}

struct Fibonacci {
    a: u32,
    b: u32,
}

impl Iterator for Fibonacci {
    type Item = u32;

    fn next(&mut self) -> Option<u32> {
        *self = Fibonacci{a: self.b, b: self.a + self.b};
        Some(self.a)
    }
}

fn solution() -> u32 {
    let fibo = Fibonacci{a: 1, b: 2};

    fibo.take_while(|&n| n < 4000000)
        .filter(|&n| n % 2 == 0)
        .fold(0, |sum, n| sum + n)
}
